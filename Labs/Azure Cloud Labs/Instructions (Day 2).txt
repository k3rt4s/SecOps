1. Connect to your jumpbox
2. Run sudo apt update to update your repositories
3. Run sudo apt upgrade to update your vm
4. Run sudo apt install docker.io to install docker
5. Check and verify that docker is running, if it isnt, start it
	sudo systemctl status docker
	sudo systemctl start docker
6. Download (Pull) a Ansible Docker container 
	sudo docker pull cyberxsecurity/ansible
7. Now launch the Ansible Docker container and connect to it
	sudo docker run -ti cyberxsecurity/ansible bash
	(-ti stands for terminal and interactive sets up the container to allow you to run a terminal and interact with the container.)
	(bash: The command we are running inside the container. This will give us a shell to control the container.)
8. Run exit to quit
9. We need to practice starting and stopping our containers
	* Note and Heads Up: The difference between docker run and docker start needs to be understood
	docker run will create a new container from the container image and that new container will have default settings. None of their previous Ansible changes will be there.
	docker start should be used every time thereafter. Otherwise problems with the activities will arise because of missing files on the Ansible container. Walk through the instructions below to help solidify this point.
10. To start back up our container, we need to first know the name of it
	To see your containers, run sudo docker container list -a
	Mine is called clever_benz and I will be using that in the next commands
11. Lets start the Container this time without connecting to bash
	sudo docker start clever_benz
12. Lets verify its running
	sudo docker ps
13. To Connect to the shell of the container
	sudo docker attach clever_benz
	
14. Within your container, create a new SSH key (ssh-keygen) WITHOUT A PASSWORD
15. Copy the new key
16. Navigate using, the web browser, to Web1 in Azure. Click Diagnose and solve problems
17. Select Reset password or SSH Key to create a new username and key
18. Select reset ssh public key (DO NOT RESET THE azureuser Account)
19. Use the username sysadmin with the new SSH Key (DO NOT RESET THE azureuser Account)
20. Repeat the steps to do the same for web2
21. Go back to your container and test SSH from the container to the web servers
22. After verifying connection and permissions, run ansible
*we must make two changes to the configuration files to let Ansible make connections*
23. Navigate to /etc/ansible
24. edit the config file nano ansible.cfg
25. find the remote_user and replace root with sysadmin (Its about a 1/4 of the way down and its commented out), Save and close the file
26. Open the hosts file nano hosts
27. Uncomment the [webservers] line
28. Add the web servers internal ip address under the [webservers] line including ansible_python_interpreter=/usr/bin/python3 beside each IP address
	[webservers]
	10.0.0.5 ansible_python_interpreter=/usr/bin/python3
	10.0.0.6 ansible_python_interpreter=/usr/bin/python3
*the way Ansible works is, it creates a python script and then runs that script on the target machine using that machine's installation of Python. Typically, Ansible may have issues determining which python to use on the target machine, but we will solve this by forcing ansible to use python 3 on each machine we configure.*
29. Test Ansible
	ansible webservers -m ping




ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDViW7U039OIPOM8JHxdHp9EaiMlmOqW5GecHuFeJm9jo0KAnOd6GMeg+WchYc8bC4GPiZVqmNAX7HfcFhNuUjcHQodX+Xsq/ML8/ZIDU9A4hm5Yx1cl7JIdu5MC7muhZZuHq71Ibm90XQEOa3uWmCkpY+UkAz7DIrUmTiQlRkSmVhvWj5A+QBgFef2ndCa4JCyzw7LDpQRU4x9Ohqh+Lb/2Fz5s9JPWU9fR6I+829ePgRWTMqJrIPm7fFv8WLLQbpkUwDFHOzyIV4cow5ShRfwJ7BHPH+yVKnNsBGbzcX5SV4Sn4UFe4lbbRmxTAdBrmwuTTFXY0yR5oLdqPNqbn4Pc2qLNjyWE/pkYdKa9/2hyuo98bWLd5FwW2JkDaPp/sHQOIHMiBus3Z83ZDOIzR0zcE53BK6zWFOpwzzc/IPbqcKKXvVD/ro/NIq3/amRs8VJKD5v99KKfJZ+ua0Ig+FFcIxM0TEn4OZ5wv3J6YLeEnFvOLJSomf9hnWuwBqTQDE=

	
	ssh azureuser@20.118.132.52
	
	


	
	